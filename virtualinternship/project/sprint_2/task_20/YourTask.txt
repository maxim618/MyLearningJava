Знакомство с понятием stateless и stateful объектов.

Давайте на примере класса DateTimeService разберем
что такое stateless и stateful объекты. Понятия
stateless и stateful очень важны, особенно если
вы хотите использовать эти объекты для создания
многопоточных приложений.

Ниже приведены две реализации класса DateTimeService (V1 и V2):

class DateTimeServiceV1 {

    long getDaysBetween(Date date1, Date date2) {
        long diff = date2.getTime() - date1.getTime();
        return TimeUnit.DAYS.convert(diff, TimeUnit.MILLISECONDS);
    }

}

class DateTimeServiceV2 {

    private Date date1;
    private Date date2;

    DateTimeServiceV2(Date date1, Date date2) {
        this.date1 = date1;
        this.date2 = date2;
    }

    long getDaysBetween() {
        long diff = date2.getTime() - date1.getTime();
        return TimeUnit.DAYS.convert(diff, TimeUnit.MILLISECONDS);
    }

}

Как вы думаете, какую из этих реализаций проще использовать
для многократного вычисления количества дней между датами?

V1 code example:
    var dateTimeService = new DateTimeServiceV1();
    var daysBetween1 = dateTimeService.getDaysBetween(date1, date2);
    var daysBetween2 = dateTimeService.getDaysBetween(date3, date4);
    var daysBetween3 = dateTimeService.getDaysBetween(date5, date6);

V2 code example:
    var daysBetween1 = new DateTimeServiceV2(date1, date2).getDaysBetween();
    var daysBetween2 = new DateTimeServiceV2(date3, date4).getDaysBetween();
    var daysBetween3 = new DateTimeServiceV2(date5, date6).getDaysBetween();

Какой из вариантов кода лучше? И почему?

Вариант V1 лучше, так как в нем для произведения вычислений
создается всего один экземпляр класса DateTimeServiceV1.

А в варианте V2 создается аш три экземпляра класса DateTimeServiceV2.

Как вы понимаете создание "лишних" объектов скажется негативно
на общей производительности системы. Так как системе придется
потратить дополнительное время на создание объектов и потом
на их удаление из памяти после того как они больше будут не нужны.

Вариант реализации V1 обладает характеристикой stateless.
Экземпляры класса DateTimeServiceV1 являются объектами
у которых нет состояния.

Напомним, что состояние объекта это набор всех свойств объекта
и их значений в определенный момент времени.

Так как у объектов класса DateTimeServiceV1 нет свойств, поэтому
их состояние и не может изменяться во время использования экземпляров
этого класса.

И наоборот объекты класса DateTimeServiceV2 обладают состоянием.
Они хранят значения двух дат (date1 и date2). И поэтому экземпляры
класса DateTimeServiceV2 не получится использовать повторно.

Очень часто в программировании мы создаем классы для реализации
определенных алгоритмов. Делая эти классы stateless мы открываем
себе дорогу к многократному использованию экземпляров таких классов.

Stateless объекты как математические функции. Они получают входные
параметры в виде параметров метода, вычисляют на их основе результат
и просто возвращают его, не изменяя при этом свое состояние.

Такие stateless объекты безопасно использовать
при многопоточных вычислениях.

Ваша задача: узнайте почему stateless объекты
считаются потоко безопасными (thread safe).
И почему stateful объекты не являются потоко
безопасными (not thread safe).

PS: не забудьте по окончанию выполнения шага создать и заполнить
файл /documentation/Task_x_description.txt. Формат заполнения этого
файла описан в task_1 в файле Learning_reflection.txt.

#### Доступ к закрытой части курса, поддержка, вопросы и обратная связь по проекту:
* [Телеграмм группа проекта](https://t.me/+mvRhG9YECTlkZjQ0)
* [Телеграмм автора курса] (javaguruby)
* [Емейл автора курса] (itguruby@mail.ru)
