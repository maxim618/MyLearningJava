В этом задании вы познакомитесь с файлом .gitignore.

Файл .gitignore лежит в корне проекта.

Данный файл предназначен для того, чтобы при коммите
в Git репозиторий не попадали "лишние" файлы.


Файл `.gitignore` в Java проекте используется для исключения определённых
файлов и директорий из системы контроля версий Git. Это позволяет предотвратить
добавление ненужных или временных файлов, которые могут создавать проблемы или
увеличивать размер репозитория. Вот список наиболее распространённых файлов и папок,
которые следует добавлять в `.gitignore` в Java проекте:

1. **Компилированные файлы**:
   - `*.class` — Байт-код Java, который создаётся после компиляции.

2. **Пакетные директории**:
   - `target/` — Директория для скомпилированных классов и других артефактов в Maven.
   - `build/` — Аналогичная директория в Gradle.
   - `out/` — Используется в некоторых IDE, например, IntelliJ IDEA, для скомпилированных классов.

3. **Файлы и директории IDE**:
   - `.idea/` — Директория настроек проекта для IntelliJ IDEA.
   - `*.iml` — Файлы модулей IDEA.
   - `.vscode/` — Настройки для Visual Studio Code.
   - `.classpath`, `.project`, `.settings/` — Специфичные для Eclipse файлы и директории.

4. **Файлы системы управления версиями**:
   - `.DS_Store` — Файлы метаданных macOS.
   - `Thumbs.db` — Кэш-превью изображений в Windows.

5. **Файлы журналов и временные файлы**:
   - `*.log`
   - `*.tmp`
   - `*.bak`

6. **Локальные конфигурационные файлы**:
   - `*.local` — Локальные конфигурации, которые могут содержать чувствительные данные.
   - `*.env` — Файлы с переменными среды.

7. **Файлы зависимостей**:
   - `node_modules/` — Если в проекте используется Node.js для фронтенд-части или инструментов сборки.
   - `lib/` — Если в проекте используются библиотеки, добавляемые вручную.

8. **Файлы, автоматически генерируемые документами**:
   - `*.jar` — Скомпилированные архивы.
   - `*.war` — Веб-архивы.

Добавление этих файлов в `.gitignore` помогает поддерживать репозиторий чистым,
избегать конфликтов и упрощать совместную работу в команде.

PS: не забудьте по окончанию выполнения шага создать и заполнить
файл /documentation/Task_x_description.txt. Формат заполнения этого
файла описан в task_1 в файле Learning_reflection.txt.

#### Доступ к закрытой части курса, поддержка, вопросы и обратная связь по проекту:
* [Телеграмм группа проекта](https://t.me/+mvRhG9YECTlkZjQ0)
* [Телеграмм автора курса] (javaguruby)
* [Емейл автора курса] (itguruby@mail.ru)
